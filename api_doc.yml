openapi: '3.0.2'
info:
  title: Traveler app
  version: '0.1.0'
servers:
  - url: https://api.server.test/v1

tags:
- name: "Authentication"

paths:
  /auth/login:
    get:
      tags:
      - "Authentication"
      summary: User login.
      description: To login as a user use this method 
      parameters:
        - in: query
          name: email
          schema:
            type: string
          required: true
          description: User email
        - in: query
          name: password
          schema:
            type: string
          required: true
          description: User password

      responses:
        '200':    # status code
          description: A JSON array of user credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: integer
                    description: The user ID.
                  email:
                    type: string
                    description: User name.
                  torknID:
                    type: string
                    description: The user login token.

  /users/register:
    post:
      tags:
      - "Authentication"
      summary: User register.
      description: Returns user credentials.
      requestBody:
        description: The following all paramiters are required*
        required: true
        content:
         application/json:
              schema:
                type: object
                properties:
                  firstname:
                    type: string
                    description: The user's first name.
                  lastname:
                    type: string
                    description: The user's last name.
                  email:
                    type: string
                    description: The user login email.
                  password:
                    type: string
                    description: The user login password.
      responses:
        '201':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: integer
                    description: The user ID.
                  email:
                    type: string
                    description: User name.
                  torknID:
                    type: string
                    description: The user login token.

  # Get all posts      
  /posts/:
    get:
      tags:
      - "Posts"
      summary: Returns a list of posts.
      description: Get all post that posted my other users.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Pagination limit as numbers
      responses:
        '200':    # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
    