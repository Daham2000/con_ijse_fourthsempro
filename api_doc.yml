openapi: "3.0.2"
info:
  title: Traveler app
  version: "0.1.0"
servers:
  - url: https://api.server.test/v1

tags:
  - name: "Authentication"

paths:
  # User login
  /auth/login:
    get:
      tags:
        - "Authentication"
      summary: User login.
      description: To login as a user use this method
      parameters:
        - in: query
          name: email
          schema:
            type: string
          required: true
          description: User email
        - in: query
          name: loginTime
          schema:
            type: string
          required: true
          description: User Login time

      responses:
        "200": # status code
          description: A JSON array of user credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: integer
                    description: The user ID.
                  email:
                    type: string
                    description: User name.
                  firstname:
                    type: string
                    description: The user's first name.
                  lastname:
                    type: string
                    description: The user's last name.
                  lastLogin:
                    type: string
                    description: The user's last login time.

  # Register user
  /users/register:
    post:
      tags:
        - "Authentication"
      summary: User register.
      description: Returns user credentials.
      requestBody:
        description: The following all paramiters are required*
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: The user's first name.
                lastname:
                  type: string
                  description: The user's last name.
                email:
                  type: string
                  description: The user login email.
                password:
                  type: string
                  description: The user login password.
      responses:
        "201": # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: integer
                    description: The user ID.
                  email:
                    type: string
                    description: User name.
                  firstname:
                    type: string
                    description: The user's first name.
                  lastname:
                    type: string
                    description: The user's last name.
                  lastLogin:
                    type: string
                    description: The user's last login time.

  # Get all posts
  /posts/:
    get:
      tags:
        - "Posts"
      summary: Returns a list of posts.
      description: Get all post that posted my other users.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Pagination limit as numbers
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: query to search posts
      responses:
        "200": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Description:
                      type: string
                      description: The user's uid.
                    District:
                      type: string
                      description: Post title.
                    LatLng:
                      type: array
                      description: Travel place's city.
                      items:
                        type: string
                    Short Detail:
                      type: string
                      description: Travel place's province.
                    Title:
                      type: string
                      description: Travel place's province.
                    youtubeID:
                      type: string
                      description: youtube Video id
                    Images:
                      type: array
                      description: Travel place's images.
                      items:
                        type: string

  # Create a post
  /admin/post/:
    post:
      tags:
        - "Posts"
      summary: Create a travel posts from here.
      description: To create a post use following credentials.
      requestBody:
        required: true
        content:
          application/from-data:
            schema:
              type: object
              properties:
                Description:
                  type: string
                  description: The user's uid.
                District:
                  type: string
                  description: Post title.
                LatLng:
                  type: array
                  description: Travel place's city.
                  items:
                    type: string
                Short Detail:
                  type: string
                  description: Travel place's province.
                Title:
                  type: string
                  description: Travel place's province.
                youtubeID:
                  type: string
                  description: youtube Video id
                Images:
                  type: array
                  description: Travel place's images.
                  items:
                    type: string
      responses:
        "201": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Description:
                      type: string
                      description: The user's uid.
                    District:
                      type: string
                      description: Post title.
                    LatLng:
                      type: array
                      description: Travel place's city.
                      items:
                        type: string
                    Short Detail:
                      type: string
                      description: Travel place's province.
                    Title:
                      type: string
                      description: Travel place's province.
                    youtubeID:
                      type: string
                      description: youtube Video id
                    Images:
                      type: array
                      description: Travel place's images.
                      items:
                        type: string

  # Create a post
  /admin/hotel/:
    post:
      tags:
        - "Hotel"
      summary: Create a hotel posts from here.
      description: To create a post use following credentials.
      requestBody:
        required: true
        content:
          application/from-data:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: The user's uid.
                district:
                  type: string
                  description: Post district.
                title:
                  type: string
                  description: Travel hotel's title.
                link:
                  type: string
                  description: Travel hotel's web link.
                miv:
                  type: number
                  description: Travel hotel's miv value.
                rate:
                  type: number
                  description: Travel hotel's rate number from 10.
                images:
                  type: array
                  description: Travel hotel's images.
                  items:
                    type: string
      responses:
        "201": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  description:
                    type: string
                    description: The user's uid.
                  district:
                    type: string
                    description: Post district.
                  title:
                    type: string
                    description: Travel hotel's title.
                  link:
                    type: string
                    description: Travel hotel's web link.
                  images:
                    type: array
                    description: Travel hotel's images.
                    items:
                      type: string

  # Get all hotels
  /hotels/:
    get:
      tags:
        - "Hotel"
      summary: Returns a list of hotels.
      description: Get all hotels.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Pagination limit as numbers
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: query to search posts
      responses:
        "200": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: number
                    description: Total number of posts
                  hotels:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: The user's uid.
                        district:
                          type: string
                          description: Post district.
                        title:
                          type: string
                          description: Travel hotel's title.
                        link:
                          type: string
                          description: Travel hotel's web link.
                        images:
                          type: array
                          description: Travel hotel's images.
                          items:
                            type: string

  # Get all hotels
  /users/:
    get:
      tags:
        - "User"
      summary: Returns a list of users.
      description: Get all users.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Pagination limit as numbers
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: query to search posts
      responses:
        "200": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUsers:
                    type: number
                    description: Total number of users
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: The user's email.
                        firstName:
                          type: string
                          description: The user's firstName.
                        lastName:
                          type: string
                          description: The user's lastName.
                        uid:
                          type: string
                          description: The user's uid.
                        image:
                          type: string
                          description: The user's profile picture.
  
  
  # Get all trips
  /trips:
    get:
      tags:
        - "Trips"
      summary: Returns a list of trips.
      description: Get all trips.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Pagination page number
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Pagination limit as numbers
        - in: query
          name: query
          schema:
            type: string
          required: false
          description: query to search posts
      responses:
        "200": # status code
          description: A JSON array of user posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"
                          

  # Create a trip
  /trips/create:
    post:
      tags:
        - "Trips"
      summary: Creates the trip plan of users.
      description: Creates the trip plan of users.
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/Trip"
      responses:
        "200": # status code
          description: A JSON array of trip document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trip"

components:
  schemas:
    Trip:
      type: object
      properties:
        selectedPlaces:
          type: array
          description: Selected places of the trip plan.
          items:
            type: object
            properties:
              place:
                type: string
                description: A place of the trip.
              numOfDays:
                type: number
                description: Duration of the place.
        duration:
          type: number
          description: Duration of the trip.
        startDate:
          type: string
          description: The start date of the trip.
        endDate:
          type: string
          description: The end date of the trip.
        isPastTrip:
          type: boolean
          description: The status of the trip.
        isArchived:
          type: boolean
        startFrom:
          type: string
          description: The start place of the trip.
        finalVisitingPlace:
          type: string
          description: The last place of the trip.
        tripName:
          type: string
          description: The name of the trip.
        participationsList:
          type: array
          description: The participations list of the trip.
          items:
            type: string
            description: UID list of the user's